% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corf.R, R/orf_functions.R
\docType{package}
\name{init_orf}
\alias{init_orf}
\alias{init_orf-package}
\title{corf: A package for using causal online random forests.}
\usage{
init_orf(numClasses, numFeatures, numRandomTests, counterThreshold,
  maxDepth, numTrees, numEpochs, type = "classification",
  method = "gini", causal = FALSE, numTreatClasses = 2,
  minFeatRange = NULL, maxFeatRange = NULL, labels = c(1:numClasses),
  findTrainError = FALSE)
}
\arguments{
\item{numClasses}{Number of classes expected to be classified.}

\item{numFeatures}{Number of features that will be in the learning dataset.}

\item{numRandomTests}{Number of random tests, i.e., number of features to
be selected at each node for evaluation.}

\item{counterThreshold}{Threshold for number of observations before a split
will occur.}

\item{maxDepth}{Maximum depth for each tree.}

\item{numTrees}{Number of trees in the forest.}

\item{numEpochs}{Number of epochs for processing during each training step.}

\item{type}{Type of Random Forest.  Only `classification` is implemented
at this time.}

\item{method}{Method used for determining if a node should split.
Implemented methods are \code{method="gini"} for Gini Impurity
(\code{p*(1-p)}), \code{method="entropy"} for entropy (\code{p*log_2(p)}),
or \code{method="hellinger"} for the Hellinger distance between the rate
at the node and the overall population (\code{sqrt(p) - sqrt(q)}).
Defaults to \code{gini}.}

\item{causal}{Is the Random Forest a Causal Random Forest?  Defaults to FALSE.}

\item{minFeatRange}{If provided, the minimum expected values for the features.
Must be a vector of the same length as numFeatures.  The min and max feature
ranges are used to draw random thresholds when creating random tests at each
node.  The forest will expand the range as necessary based on new data.
Defaults to NULL.}

\item{maxFeatRange}{If provided, the maximum expected values for the features.
Must be a vector of the same length as numFeatures.  The min and max feature
ranges are used to draw random thresholds when creating random tests at each
node.  The forest will expand the range as necessary based on new data.
Defaults to NULL.}

\item{labels}{Labels for the classes.  Length must be equal to numClasses.
Defaults to sequence 1:numClasses.}

\item{findTrainError}{Should the forest calculate the out of back error on the
training data.}
}
\description{
The Causal Online Random Forest is an application of the <a
href="../grf/index.html">Wager and Athey causal forest</a> to an Online
Random Forest able to grow a forest of trees incrementally from streams of
data.  The algorithm was adapted from <a
href="https://github.com/amirsaffari/online-multiclass-lpboost">Amir
Saffari's libraries in C++</a>.

This function initializes the online random forest (or causal online random
 forest).
}
\section{CORF functions}{

}

\examples{
## simulate a data point with 10 columns
x <- matrix(runif(10), nrow=1)

## initialize the model object
orfmod <- init_orf(numClasses = 2, numFeatures = 10, numRandomTests = 2,
                   counterThreshold = 10, maxDepth = 5, numTrees = 10,
                   numEpochs = 1)

## train the model with the data
orfmod <- train_orf(model = orfmod, x = x, y=0)

}
\seealso{
\code{\link{train_orf}} for training the orf object, \code{\link{predict.orf}} for making predictions from the orf object, and \code{\link{get_importance}} for getting variable importances from the orf object
}
\keyword{causal}
\keyword{forest,}
\keyword{incremental}
\keyword{learning,}
\keyword{online}
\keyword{random}
