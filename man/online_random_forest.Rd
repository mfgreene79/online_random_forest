% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/orf_functions.R
\name{online_random_forest}
\alias{online_random_forest}
\title{Online Random Forest}
\usage{
online_random_forest(x, y, numRandomTests, counterThreshold, maxDepth,
  numTrees, numEpochs, type = "classification", method = "gini",
  findTrainError = FALSE, verbose = FALSE, trainModel = TRUE)
}
\arguments{
\item{x}{A matrix of features to train the forest.}

\item{y}{matrix of classes with one column.  Multiclass classification is supported.
Must be integers and provided as a matrix.}

\item{numRandomTests}{Number of random tests, i.e., number of features to
be selected at each node for evaluation.}

\item{counterThreshold}{Threshold for number of observations before a split
will occur.}

\item{maxDepth}{Maximum depth for each tree.}

\item{numTrees}{Number of trees in the forest.}

\item{numEpochs}{Number of epochs for processing during each training step.}

\item{type}{Type of Random Forest.  Either `classification` or `regression`}

\item{method}{Method used for determining if a node should split. See details for more information.}

\item{findTrainError}{Should the forest calculate the out of back error on the
training data.}

\item{verbose}{verbose output (warning: may call cout from C++)}

\item{trainModel}{Should the forest be trained on the new data?
Defaults to TRUE.  Useful for testing.}
}
\description{
This function initializes and fits an online random forest from a matrix of
features and a vector of outcomes.
}
\details{
This function provides an alternative method for using the
  algorithm, as opposed to using \code{\link{init_orf}} and
  \code{\link{train_orf}}.  Note that unlike the init/train method this call
  to the algorithm will automatically identify the number of features,
  classes, and labels in the provided data.
  
  Implemented methods are \code{method="gini"} for Gini Impurity
  (\code{p*(1-p)}), \code{method="entropy"} for entropy (\code{p*log_2(p)}),
  or \code{method="hellinger"} for the Hellinger distance between the rate
  at the node and the overall population (\code{sqrt(p) - sqrt(q)}).
  Defaults to \code{gini}.
}
\examples{
## simulate a data point with 10 columns
x <- matrix(runif(10), nrow=1)
y <- matrix(0)

## fit the model 
orfmod <- online_random_forest(x=x, y=y, 
                               numRandomTests = 2,
                               counterThreshold = 10, 
                               maxDepth = 5, 
                               numTrees = 10,
                               numEpochs = 1)

}
\seealso{
\code{\link{init_orf}} for initializing the orf object, \code{\link{train_orf}} for training the orf object
}
\keyword{forest,}
\keyword{incremental}
\keyword{learning,}
\keyword{online}
\keyword{random}
